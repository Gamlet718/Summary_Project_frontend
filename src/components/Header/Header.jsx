// src/components/Header/Header.jsx
import React, { useState, useContext } from "react";
import "./Header.css";
import { AuthContext } from "../../contexts/AuthContext";
import { Dialog, Button, Portal } from "@chakra-ui/react";
import { useTranslation } from "react-i18next";
import LanguageSwitcher from "../LanguageSwitcher/LanguageSwitcher";

/**
 * @fileoverview –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —à–∞–ø–∫–∏ —Å–∞–π—Ç–∞ (Header).
 * –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–ª–µ—Ñ–æ–Ω, –ª–æ–≥–æ—Ç–∏–ø, –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞/–≤—ã—Ö–æ–¥–∞, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–∞.
 * –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ ¬´–≤–æ–π—Ç–∏¬ª, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤—ã–π—Ç–∏.
 */

/**
 * –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
 * @callback VoidHandler
 * @returns {void}
 */

/**
 * @typedef {Object} HeaderProps
 * @property {VoidHandler} onSignUpClick - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è¬ª.
 * @property {VoidHandler} onLoginClick - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–í–æ–π—Ç–∏¬ª.
 */

/**
 * –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ AuthContext (–¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –¥–∞–Ω–Ω—ã–µ).
 * @typedef {Object} AuthContextValue
 * @property {boolean} isAuthenticated - –ü—Ä–∏–∑–Ω–∞–∫, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
 * @property {{ email?: string, role?: string } | null} user - –î–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @property {VoidHandler} logout - –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.
 */

/**
 * –®–∞–ø–∫–∞ —Å–∞–π—Ç–∞. defaultValue ‚Äî –Ω–∞ —Ä—É—Å—Å–∫–æ–º (RU ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫).
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é.
 *
 * @component
 * @param {HeaderProps} props - –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 * @returns {JSX.Element} –†–∞–∑–º–µ—Ç–∫–∞ —à–∞–ø–∫–∏.
 *
 * @example
 * <Header onSignUpClick={() => setShowSignUp(true)} onLoginClick={() => setShowLogin(true)} />
 */
export default function Header({ onSignUpClick, onLoginClick }) {
  /** @type {AuthContextValue} */
  const { isAuthenticated, user, logout } = useContext(AuthContext);

  /**
   * –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞.
   * @type {[boolean, React.Dispatch<React.SetStateAction<boolean>>]}
   */
  const [showLogoutModal, setShowLogoutModal] = useState(false);

  /**
   * –•—É–∫ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
   * t(key, options) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –ø–æ –∫–ª—é—á—É, –∞ defaultValue –∑–∞–¥–∞—ë—Ç –∑–∞–ø–∞—Å–Ω–æ–π —Ç–µ–∫—Å—Ç.
   */
  const { t } = useTranslation();

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–í–æ–π—Ç–∏/–í—ã–π—Ç–∏¬ª.
   * –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª ¬´–í—ã–π—Ç–∏?¬ª.
   * –ò–Ω–∞—á–µ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –≤—ã—à–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞).
   * @returns {void}
   */
  const handleLoginClick = () => {
    if (isAuthenticated) setShowLogoutModal(true);
    else onLoginClick();
  };

  /**
   * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã—Ö–æ–¥–∞.
   * @returns {void}
   */
  const closeLogoutModal = () => setShowLogoutModal(false);

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ.
   * @returns {void}
   */
  const handleLogout = () => {
    logout();
    setShowLogoutModal(false);
  };

  return (
    <>
      <header className="header">
        <div className="header__phone">üìû +1 (234) 567-89-00</div>
        <div className="header__logo">MyLogo</div>

        <div className="header__actions">
          <button className="header__btn" onClick={handleLoginClick}>
            {isAuthenticated
              ? t("header_logout", { defaultValue: "–í—ã—Ö–æ–¥" })
              : t("header_login", { defaultValue: "–í–æ–π—Ç–∏" })}
          </button>

          {!isAuthenticated && (
            <button
              className="header__btn header__btn--signup"
              onClick={onSignUpClick}
            >
              {t("header_signup", { defaultValue: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è" })}
            </button>
          )}

          <LanguageSwitcher />
        </div>
      </header>

      {/* Logout modal */}
      <Dialog.Root open={showLogoutModal} onOpenChange={setShowLogoutModal}>
        <Dialog.Trigger asChild>
          <div />
        </Dialog.Trigger>

        <Portal>
          <Dialog.Backdrop
            style={{ position: "fixed", inset: 0, background: "rgba(0,0,0,0.4)" }}
          />
          <Dialog.Positioner
            onClick={(e) => e.target === e.currentTarget && closeLogoutModal()}
          >
            <Dialog.Content
              style={{
                background: "#fff",
                borderRadius: 6,
                padding: 20,
                boxShadow: "0 10px 25px rgba(0,0,0,0.1)",
                maxWidth: 400,
                margin: "auto"
              }}
            >
              <Dialog.Header>
                <Dialog.Title>
                  {t("dialog_title", { defaultValue: "–í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É" })}
                </Dialog.Title>
              </Dialog.Header>

              <Dialog.Body>
                <p>
                  {t("dialog_loggedInAs", { defaultValue: "–í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫" })}{" "}
                  <b>{user?.email}</b>
                  {user?.role && (
                    <>
                      {t("dialog_roleSeparator", { defaultValue: " - " })}
                      <b>{user.role}</b>
                    </>
                  )}
                  . {t("dialog_wantToLogout", { defaultValue: "–í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ ?" })}
                </p>
              </Dialog.Body>

              <Dialog.Footer>
                <Button variant="outline" onClick={closeLogoutModal} type="button">
                  {t("common_cancel", { defaultValue: "–û—Ç–º–µ–Ω–∞" })}
                </Button>
                <Button colorScheme="red" onClick={handleLogout} type="button">
                  {t("common_logout", { defaultValue: "–í—ã–π—Ç–∏" })}
                </Button>
              </Dialog.Footer>
            </Dialog.Content>
          </Dialog.Positioner>
        </Portal>
      </Dialog.Root>
    </>
  );
}