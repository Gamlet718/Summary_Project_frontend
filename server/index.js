// server/index.js
import "dotenv/config";
import express from "express";
import cors from "cors";
import bodyParser from "body-parser";
import productsRouter from "./server-routes/products.js";
import googleBooksRouter from "./server-routes/googleBooks.js";
import translateRouter from "./server-routes/translate.js"; // NEW: —Ä–æ—É—Ç –ø–µ—Ä–µ–≤–æ–¥–∞

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
app.use((req, _res, next) => {
  console.log(`${new Date().toISOString()} - ${req.method} ${req.path}`);
  next();
});

// –†–æ—É—Ç—ã
app.use("/api/products", productsRouter);
app.use("/api/google-books", googleBooksRouter);
app.use("/api", translateRouter); // NEW: —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω POST /api/translate

// –ë–∞–∑–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
app.get("/", (_req, res) => {
  res.json({
    message: "–°–µ—Ä–≤–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞–ø—É—â–µ–Ω!",
    version: "1.0.0",
    endpoints: {
      "GET /api/products": "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã",
      "POST /api/products": "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä",
      "GET /api/products/:id": "–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ ID",
      "PUT /api/products/:id": "–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
      "DELETE /api/products/:id": "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä",
      "POST /api/google-books/seed":
        "–ó–∞–≥—Ä—É–∑–∏—Ç—å 30 –∫–Ω–∏–≥ –∏–∑ Google, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Firestore –∏ –ª–æ–∫–∞–ª—å–Ω–æ",
      "GET /api/google-books/cached": "–ü–æ–ª—É—á–∏—Ç—å –¥–æ 30 –∫–Ω–∏–≥ –∏–∑ Firestore",
      "GET /api/google-books/image-proxy?src=":
        "–ü—Ä–æ–∫—Å–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Google Books",
      "POST /api/google-books/normalize-local":
        "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–Ω–∏–≥–∏: –∂–∞–Ω—Ä—ã RU + –∫–∞—Ä—Ç–∏–Ω–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏",
      "POST /api/translate": "–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–∞—Å—Å–∏–≤ —Ç–µ–∫—Å—Ç–æ–≤ EN <-> RU" // NEW
    }
  });
});

// –û—à–∏–±–∫–∏
app.use((err, _req, res, _next) => {
  console.error("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", err);
  res.status(500).json({
    success: false,
    message: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
    error:
      process.env.NODE_ENV === "development"
        ? err.message
        : "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫"
  });
});

// 404
app.use("*", (_req, res) => {
  res.status(404).json({ success: false, message: "–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω" });
});

app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üì° API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
  console.log(`üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:${PORT}`);
});